:root {
    --pixel-size: 10;
    --grid-cell: calc( var(--pixel-size) * 16);
    --bg: #CAC4F8;
}

@font-face {
   font-family: 'Pixelify Sans';
   src: url('fonts/PixelifySans-VariableFont_wght.ttf') format('truetype');
}

 @media( min-width: 700px ) {
    :root {
       --pixel-size: 3px;
    }
 }
 @media( min-width: 1000px ) {
    :root {
       --pixel-size: 4px;
    }
 }
 /* @media( min-width: 1000px ) {
    :root {
       --pixel-size: 5px;
    }
 } */
 
 html, body {
    height: 100%;
 }
 
 body {
    background: var(--bg);
    display: flex;
    align-items: center;
    justify-content: center;
 }
 
 .pixel-art {
    image-rendering: pixelated;
 }
 
 #background-landing {
   height: 100%;
   width: 100%;
 }

 .landing-page #button-start {
   position:absolute;
   height: 83px;
   width: auto;
   top: 445px;
   left: 530px;
}


 .frame {
    /* This is just for Pen decoration */
    width: calc(var(--pixel-size) * 160);
    height: calc(var(--pixel-size) * 144);
    outline: var(--pixel-size) solid #fff;
    z-index:1; 
    position:relative;
 }
 
 .camera {
    width: calc(var(--pixel-size) * 160);
    height: calc(var(--pixel-size) * 144);
    overflow: hidden;
    background: #61ddf7;
    position:relative;
 }
 
 .map {
    image-rendering: pixelated;
    background-image: url("https://assets.codepen.io/21542/CameraDemoMap.png");
    background-size: 100%;
    width: calc(13 * var(--grid-cell));
    height: calc(10 * var(--grid-cell));
    position: relative;
 }
 
 .character {
    width: calc( var(--grid-cell)* 2 );
    height: calc( var(--grid-cell)* 2 );
    position: absolute;
    overflow:hidden;
 }
 
 .shadow {
    width: calc( var(--grid-cell)* 2 );
    height: calc( var(--grid-cell)* 2 );
    position: absolute;
    left:0;
    top:0;
    background: url("https://assets.codepen.io/21542/DemoRpgCharacterShadow.png") no-repeat no-repeat;
    background-size: 100%;
 }
 
 .character_spritesheet {
    position: absolute;
    background: url("https://assets.codepen.io/21542/DemoRpgCharacter.png") no-repeat no-repeat;
    background-size: 100%;
    width: calc( var(--grid-cell)* 8 );
    height: calc( var(--grid-cell)* 8 );
 }
 
 .character[facing="right"] .character_spritesheet {
    background-position-y: calc( var(--pixel-size) * -32 );
 }
 .character[facing="up"] .character_spritesheet {
    background-position-y: calc( var(--pixel-size) * -64 );
 }
 .character[facing="left"] .character_spritesheet {
    background-position-y: calc( var(--pixel-size) * -96 );
 }
 .character[walking="true"] .character_spritesheet {
    animation: walkAnimation 0.6s steps(4) infinite; 
 }
 
 @keyframes walkAnimation {
   from {
     transform: translate3d(0%,0%,0);
   }
   to {
     transform: translate3d(-100%,0%,0);
   }
 }
 
 .dpad {
    position:absolute;
    right: calc(var(--pixel-size) * 2);
    bottom: calc(var(--pixel-size) * 2);
    width: calc(var(--pixel-size) * 37);
    height: calc(var(--pixel-size) * 38);
 }
 .dpad-button {
    appearance:none;
    outline:0;
    border:0;
    background:transparent;
    padding:0;
    cursor:pointer;
 }
 .dpad-button svg {
    display:block;
    height: calc(var(--pixel-size) * 13);
 }
 
 .dpad-button.pressed .Arrow_arrow-inset { stroke:#07c2cc; }
 .dpad-button.pressed .Arrow_arrow-body { stroke:#17dfea; }
 
 .dpad-up {
    position: absolute;
    left: calc(var(--pixel-size) * 12);
    top:0;
 }
 .dpad-down {
    position: absolute;
    bottom:var(--pixel-size);
    left: calc(var(--pixel-size) * 12);
 }
 .dpad-left {
    position: absolute;
    top: calc(var(--pixel-size) * 12);
    left:0;
 }
 .dpad-right {
    position: absolute;
    top: calc(var(--pixel-size) * 12);
    right:0;
 }
 
 .dpad {
    user-select:none;
 }
 
 
 .corner_topleft,
 .corner_topright,
 .corner_bottomleft,
 .corner_bottomright {
    position: absolute;
    width: var(--pixel-size);
    height: var(--pixel-size);
    background: var(--bg);
    z-index:2;
 }
 
 .corner_topleft {
    top: calc(var(--pixel-size) * -1);
    left: calc(var(--pixel-size) * -1);
 }
 .corner_topright {
    top: calc(var(--pixel-size) * -1);
    right: calc(var(--pixel-size) * -1);
 }
 .corner_bottomleft {
    bottom: calc(var(--pixel-size) * -1);
    left: calc(var(--pixel-size) * -1);
 }
 .corner_bottomright {
    bottom: calc(var(--pixel-size) * -1);
    right: calc(var(--pixel-size) * -1);
 }
 
 .headline {
    position:absolute;
    top:calc(var(--pixel-size) * 2);
    right:calc(var(--pixel-size) * 2);
    width: calc(var(--pixel-size) * 75)
 }
 
 .overlay {
   display: none;
   position: fixed;
   top: 25%;
   left: 37%;
   right: 0;
   bottom: 0;
   width: 400px;
   height: 50%;
   background: white;
   border-radius: 25px;
   animation: revealOverlay 0.5s ease forwards; /* Animation for revealing */
}

@keyframes revealOverlay {
  from {
    transform: scale(0);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

.overlay.bouncy {
   animation: bounceOverlay 0.5s ease forwards; /* Animation for bounce */
}

@keyframes bounceOverlay {
  20%,
  50%,
  80% {
    transform: translateY(-10px);
  }
  40%,
  60% {
    transform: translateY(5px);
  }
  100% {
    transform: translateY(0);
  }
}

.overlay .Guide {
   font-family: 'Pixelify Sans', sans-serif;
   position: fixed;
   top:300px;
   left: 75px;
   font-weight: bold;
}

.overlay-content {
   font-family: 'Pixelify Sans', sans-serif;
   position: relative;
   margin-right: 20px;
   top: 50%;
   left: 50%;
   transform: translate(-50%, -50%);
   text-align: center;
   color: black;
   font-weight: 500;
}

#backButton {
   font-family: 'Pixelify Sans', sans-serif;
   position: fixed;
   bottom: 320px;
   right: 10px; 
   font-size: 20px;
   font-weight: 500;
   text-decoration: none;
   border: none;
   background: none;
   cursor: pointer;
   color: #aaa;
   z-index: 1001;
}

#backButton:hover {
   color: black;
}

.typewriter {
   overflow: hidden;
   margin: 0 auto;
   letter-spacing: .15em;
}
 
 /* The typing effect */
 @keyframes typing {
   from { width: 0 }
   to { width: 100% }
 }
 
 /* The typewriter cursor effect */
 @keyframes blink-caret {
   from, to { border-color: transparent }
   50% { border-color: orange }
 }


 /*Sprite fox*/
.spriteFox{
   width: 32px;
   height: 32px;
   position: absolute;
   transform: scale(3);
   image-rendering: pixelated;
   left: 78px;
   top: 250px;  
   background-image: url('images/FoxSpriteSheet.png');
   background-repeat: no-repeat;
   animation: play 1s steps(4) infinite; 
   overflow: hidden;
}

@keyframes play {
   from {
     background-position: 0px; 
   }
   to {
     background-position: -256px;
   }
 }
 
 .questionMark{
   position: absolute;
   image-rendering: pixelated;
   width: 100px;
   height: 100px;
   transform: scale(3);
   top: 200px;
   left: 5px;
   background-image: url('images/QuestionMark.svg');
 }